# 设置运行 Nginx 的用户
user  nginx;

# 启动的 worker 进程数量，一般设置为 auto，Nginx 会自动根据 CPU 数量设置合适的数量
worker_processes  auto;

# 错误日志路径和级别
error_log  /var/log/nginx/error.log warn;

# PID 文件路径
pid        /var/run/nginx.pid;

# 定义全局事件
events {
    # 最大连接数
    worker_connections  1024;
}

# 定义 HTTP 服务器
http {
    # 包含 MIME 类型的文件
    include       /etc/nginx/mime.types;
    # 默认 MIME 类型
    default_type  application/octet-stream;

    # 自定义的 Nginx 配置
    server {
        # 监听的端口
        listen       80;
        # 服务器名称
        server_name 159.75.104.173;

        location / {
            if ($request_filename ~* .*\.(?:htm|html)$)  ## 配置页面不缓存html和htm结尾的文件
            {
               add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
            }
            # 网站根目录，此处使用容器内的路径
            root   /usr/share/nginx/html;
            # 默认首页
            index  index.html;
            # 尝试从磁盘找到请求的文件，如果不存在则跳转到 index.html
            try_files $uri $uri/ /index.html;
            # 设置Nginx反向代理请求时的请求头
#             proxy_set_header Host $host;
            # 处理URL重写和静态文件请求的情况
#             if (!-f $request_filename) {
#               rewrite ^.*$ /index.html break;
#             }
        }
        # alias 或root 都是替换路径
        # location /micro 则最后不加/
        # location /micro/ 则最后加/
        location /micro/demo {
            if ($request_filename ~* .*\.(?:htm|html)$)  ## 配置页面不缓存html和htm结尾的文件
            {
               add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
            }
            # 把匹配到的路径重写, 注意要以/结尾
            alias /usr/share/nginx/html/demo;
            # 默认首页
            index  index.html;
            try_files $uri $uri/ /demo/index.html;
        }
        location /micro/docs {
            if ($request_filename ~* .*\.(?:htm|html)$)  ## 配置页面不缓存html和htm结尾的文件
            {
               add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
            }
            # 把匹配到的路径重写, 注意要以/结尾
            alias /usr/share/nginx/html/docs;
            # 默认首页
            index  index.html;
            try_files $uri $uri/ /docs/index.html;
        }
        # 定义 404 页面
        error_page  404              /404.html;
        location = /404.html {
            root   /usr/share/nginx/html;
        }

        # 定义 50x 页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
    # 自定义的 Nginx 配置
    server {
        # 监听的端口
        listen       8680;
        # 服务器名称
        server_name 159.75.104.173;
        # location /docs 则最后不加/
        # location /docs/ 则最后加/
        location / {
            # 把匹配到的路径重写, 注意要以/结尾
            root /usr/share/nginx/html/docs;
            # 默认首页
            index  index.html;
            # 尝试从磁盘找到请求的文件，如果不存在则跳转到 index.html
            try_files $uri $uri/ /index.html;

            expires -1;                          # 首页一般没有强制缓存
            add_header Cache-Control no-cache;

            add_header "Access-Control-Allow-Origin" "*";   # 全局变量获得当前请求origin，带cookie的请求不支持*
            add_header "Access-Control-Allow-Methods" "*";  # 允许请求方法
            add_header "Access-Control-Allow-Headers" "*";  # 允许请求的 header
        }
        location /docs {
            # 把匹配到的路径重写, 注意要以/结尾
            alias /usr/share/nginx/html/docs;
            # 默认首页
            index  index.html;
            # 尝试从磁盘找到请求的文件，如果不存在则跳转到 index.html
            try_files $uri $uri/ /index.html;
            expires -1;                          # 首页一般没有强制缓存
            add_header Cache-Control no-cache;

            add_header "Access-Control-Allow-Origin" $http_origin;   # 全局变量获得当前请求origin，带cookie的请求不支持*
            add_header "Access-Control-Allow-Methods" "*";  # 允许请求方法
            add_header "Access-Control-Allow-Headers" "*";  # 允许请求的 header
        }
        location ~*\.(js|css|png|jpg|jpeg|gif|ico)$ {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

            root   /usr/share/nginx/html/docs;
            expires 30d;
        }
    }
}

